version: "3.8"

x-airflow-common:
  &airflow-common
  build: .
  image: custom-airflow:2.10.2
  env_file:
    - .env
  environment:
    AIRFLOW__CORE__EXECUTOR: SequentialExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/db/airflow.db
    AIRFLOW_UID: ${AIRFLOW_UID:-50000}
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./data:/opt/airflow/data
    - ./db:/opt/airflow/db    
    - ./shared_dbs:/opt/airflow/shared_dbs
  user: "${AIRFLOW_UID:-50000}:0"

services:
  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    command: >
      bash -c "mkdir -p /opt/airflow/db /opt/airflow/shared_dbs &&
      airflow db init &&
      echo '✅ Airflow DB initialized'"
    restart: "no"

  airflow-create-user:
    <<: *airflow-common
    container_name: airflow-create-user
    command: >
      bash -c "airflow users create \
      --username ${_AIRFLOW_WWW_USER_USERNAME} \
      --password ${_AIRFLOW_WWW_USER_PASSWORD} \
      --firstname Airflow \
      --lastname Admin \
      --role Admin \
      --email admin@example.com || true &&
      echo '✅ Admin user created'"
    restart: "no"
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    command: ["airflow", "scheduler"]
    restart: always
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      airflow-create-user:
        condition: service_completed_successfully

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    command: ["airflow", "webserver"]
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      airflow-init:
        condition: service_completed_successfully
      airflow-create-user:
        condition: service_completed_successfully